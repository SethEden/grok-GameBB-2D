I would like to make a 2D arcade game engine for Windows using NodeJS, ElectronJS, VueJS, and BabylonJS. The goal is to have a multi-monitor game engine where a single screen on the computer that stretches across all the monitors contains a single canvas with a single BabylonJS camera that renders from a single BabylonJS scene. So this should make the whole process super easy for sharing a single scene with a single camera. I tried building this project before and had some major issues with the ortho camera in BabylonJS not rendering geometric objects such as primitives like squares, circles or meshes, so it was determined to use a free camera and align the camera position coordinates, camera target coordinates and view frustum such that the camera aligned perpendicular to the at the XY plane and vertically oriented in the -Z axes. So I would like to setup some ground rules before we get any further. #1. I want to make sure that we are always using JavaScript ES6/ES7 syntax with modern import/export statements. #2. I want to make sure we completely avoid any usage of the term "this" in the code as it can confuse scope and cause issues with maintainability, future development efforts or code support, and tech debt. #3. I want to make sure we are always and ONLY using a compositional programing model! So none of this inheritance, or polymorphism messy business. Lets try and keep the code simple and clean. Before we get into the details of the actual game implementation lets get the most basic hello world application stood up and working, then we can iterate on the rest of the video game. We will only use meshes and mesh primitives, no sprites! What files should I make to get this going? Lets make sure we put the code in the src folder.

Now the goal is to build a basic line-vector object multi-monitor remake of the classic game asteroids. So there will be object collision, player movement, targeting, shooting bullets, generating objects, destroying objects, spawning new objects as they break up, and a wrap-around game space. A player ship with thrusters....and more. Later on we will need lives, power up rewards to gain new lives, a scoring system, a way to track level difficulty as the user completes levels, and new more difficult levels are loaded, a menu system. But right now I just want to make sure we can get the most basic game mechanics functioning. Again I want to make sure that all of the game objects and player ship, bullets and everything are built with 2D vector based primitive objects or custom 2D mesh based vector objects.....not sprites. So that should be enough information for us to get started.....LETS GO!! Going for a classic simple black and white asteroid vibe here! Starting completely from scratch here so lets get this right from the get-go!! What files should I make to get this going? What should the contents of those files be? Start small makes it easier to get something up and running quickly, and then iterate quickly. Having lots of quick wins will be really helpful to keep the energy and momentum going.